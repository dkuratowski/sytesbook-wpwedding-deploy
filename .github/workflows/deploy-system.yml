name: "Deploy system"

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Select the environment
        required: true
        options:
          - staging
          - production
      tag:
        type: string
        description: The branch, tag or SHA to checkout. Falls back to default branch if not given.
        required: false

jobs:
  deploy-system:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ inputs.environment }}
    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: "8.4"

    - name: Setup NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Check versions
      run: |
        echo "PHP version: $(php --version)"
        echo "NodeJS version: $(node --version)"
        echo "NPM version: $(npm --version)"

    - name: "Checkout: sytesbook-wpwedding-deploy"
      uses: actions/checkout@v4
      with:
        repository: dkuratowski/sytesbook-wpwedding-deploy
        path: repos/sytesbook-wpwedding-deploy
        token: ${{ secrets.GIT_ACCESS_TOKEN }}

    - name: "Checkout: sytesbook-wpwedding"
      uses: actions/checkout@v4
      with:
        repository: dkuratowski/sytesbook-wpwedding
        ref: ${{ inputs.tag }}
        path: repos/sytesbook-wpwedding
        token: ${{ secrets.GIT_ACCESS_TOKEN }}

    - name: "Checkout: sytesbook-wpwedding-installer"
      uses: actions/checkout@v4
      with:
        repository: dkuratowski/sytesbook-wpwedding-installer
        path: repos/sytesbook-wpwedding-installer
        token: ${{ secrets.GIT_ACCESS_TOKEN }}

    - name: "Checkout: sytes-react"
      uses: actions/checkout@v4
      with:
        repository: dkuratowski/sytes-react
        path: repos/sytes-react
        token: ${{ secrets.GIT_ACCESS_TOKEN }}

    - name: "Composer install: sytesbook-wpwedding"
      working-directory: ./repos/sytesbook-wpwedding
      run: composer install

    - name: "NPM install: sytes-react"
      working-directory: ./repos/sytes-react
      run: npm install

    - name: "NPM install and build: sytesbook-wpwedding/src/wp-content/themes/sytesbook-wpwedding"
      working-directory: ./repos/sytesbook-wpwedding/src/wp-content/themes/sytesbook-wpwedding
      run: |
        npm install
        npm run build

    - name: "NPM install: sytesbook-wpwedding-deploy"
      working-directory: ./repos/sytesbook-wpwedding-deploy
      run: |
        npm install
    
    - name: "Create package"
      id: create_package
      env:
        DOTENV_KEY: ${{ secrets.DOTENV_VAULT_KEY }}
      run: |
        ./repos/sytesbook-wpwedding-deploy/create-package.sh

    - name: Cleanup old installation
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ vars.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        command_timeout: 30m
        script: |
          echo "Cleanup old installation"
          cd ${{ vars.ENV_ROOT_DIR }}
          echo "Cleanup ./deployment directory"
          rm -rfv ./deployment/*
          rm -fv ./deployment/.env
          echo "Cleanup ./main-domain-public directory"
          rm -fv ./main-domain-public/*
          rm -fv ./main-domain-public/.htaccess
          echo "Cleanup ./model-domains-public directory"
          rm -fv ./model-domains-public/*
          rm -fv ./model-domains-public/.htaccess
          echo "Cleanup ./scripts directory"
          rm -rfv ./scripts/*

    - name: Deploy package to the web server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ vars.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        source: "./package.tar.gz"
        target: "${{ vars.ENV_ROOT_DIR }}/deployment"

    - name: Install package
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ vars.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        command_timeout: 30m
        script: |
          echo "Installing package"
          echo "Umask: $(umask)"
          cd ${{ vars.ENV_ROOT_DIR }}/deployment
          tar -xzf package.tar.gz
          rm package.tar.gz
          echo "Creating flag directory"
          cd ${{ vars.ENV_ROOT_DIR }}/deployment/wp
          mkdir flags
          chmod g+w flags
          echo "Creating symbolic links"
          cd ${{ vars.ENV_ROOT_DIR }}/main-domain-public
          ln -sv ${{ vars.ENV_ROOT_DIR }}/uploads
          ln -sv ${{ vars.ENV_ROOT_DIR }}/deployment/wp/wp-admin
          ln -sv ${{ vars.ENV_ROOT_DIR }}/deployment/src/wp-content
          ln -sv ${{ vars.ENV_ROOT_DIR }}/deployment/wp/wp-includes
          ln -sv ${{ vars.ENV_ROOT_DIR }}/deployment/wp/.htaccess
          ln -sv ${{ vars.ENV_ROOT_DIR }}/deployment/wp/index.php
          ln -sv ${{ vars.ENV_ROOT_DIR }}/deployment/wp/wp-login.php
          cd ${{ vars.ENV_ROOT_DIR }}/model-domains-public
          ln -sv ${{ vars.ENV_ROOT_DIR }}/uploads
          ln -sv ${{ vars.ENV_ROOT_DIR }}/deployment/src/wp-content
          ln -sv ${{ vars.ENV_ROOT_DIR }}/deployment/wp/wp-includes
          ln -sv ${{ vars.ENV_ROOT_DIR }}/deployment/wp/.htaccess
          ln -sv ${{ vars.ENV_ROOT_DIR }}/deployment/wp/index.php
          cd ${{ vars.ENV_ROOT_DIR }}/deployment
          ln -sv ${{ vars.ENV_ROOT_DIR }}/logs
          cd ${{ vars.ENV_ROOT_DIR }}/deployment/wp
          ln -sv ${{ vars.ENV_ROOT_DIR }}/deployment/src/wp-content
          ln -sv ${{ vars.ENV_ROOT_DIR }}/deployment/src/wp-config.php
          ln -sv ${{ vars.ENV_ROOT_DIR }}/uploads

    - name: Deploy scripts to the web server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ vars.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        source: "./repos/sytesbook-wpwedding-deploy/scripts/*.sh"
        strip_components: 4   # Remove "./repos/sytesbook-wpwedding-deploy/scripts" from the beginning of the source path
        target: "${{ vars.ENV_ROOT_DIR }}/scripts"
    
    - name: Setup CRON jobs on the web server
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ vars.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        command_timeout: 30m
        script: |
          echo "Setup CRON jobs"
          ( \
          echo "${{ vars.BACKUP_CRON_SCHEDULE }} cd ${{ vars.ENV_ROOT_DIR }} && ./scripts/backup.sh" && \
          echo "${{ vars.SMTP_CHECK_CRON_SCHEDULE }} cd ${{ vars.ENV_ROOT_DIR }} && ./scripts/smtp-check.sh" \
          ) | crontab -
          echo "CRON jobs successfully setup"
          crontab -l
