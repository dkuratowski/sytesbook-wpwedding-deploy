name: "Deploy model domain"

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Select the environment
        required: true
        options:
          - staging
          - production
      model-collection:
        type: string
        description: The model collection of the model instance to which a model domain has to be assigned.
        required: true
      model-uid:
        type: string
        description: The UID of the model instance to which a model domain has to be assigned.
        required: true
      model-domain-folder:
        type: string
        description: The folder on the web server that belongs to the model domain being assigned to a model instance.
        required: true
      model-domain-name:
        type: string
        description: The model domain being assigned to a model instance.
        required: true
      operator-username:
        type: string
        description: The username of the operator who is performing the model domain assignment.
        required: true
      operator-application-password:
        type: string
        description: The application password created for the operator who is performing the model domain assignment.
        required: true

jobs:
  deploy-model-domain:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ inputs.environment }}
    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: "8.3"

    - name: Setup NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Check versions
      run: |
        echo "PHP version: $(php --version)"
        echo "NodeJS version: $(node --version)"
        echo "NPM version: $(npm --version)"

    - name: "Checkout: sytesbook-wpwedding-deploy"
      uses: actions/checkout@v4
      with:
        repository: dkuratowski/sytesbook-wpwedding-deploy
        path: repos/sytesbook-wpwedding-deploy
        token: ${{ secrets.GIT_ACCESS_TOKEN }}
    
    - name: "Composer install: sytesbook-wpwedding-deploy/installer"
      working-directory: ./repos/sytesbook-wpwedding-deploy/installer
      run: composer install

    - name: "NPM install: sytesbook-wpwedding-deploy"
      working-directory: ./repos/sytesbook-wpwedding-deploy
      run: |
        npm install
    
    - name: "Generate installer ID"
      id: generate_installer_id
      run: |
        ./repos/sytesbook-wpwedding-deploy/generate-id.sh

    - name: Prepare on-site installer
      run: |
        ./repos/sytesbook-wpwedding-deploy/prepare-installer.sh ${{ steps.generate_installer_id.outputs.generated_id }}

    - name: Deploy on-site installer to the webserver
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ vars.FTP_SERVER }}
        username: ${{ secrets.FTP_USER }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./installer/
        server-dir: "${{ inputs.model-domain-folder }}/installer/"

    - name: Execute on-site installer
      run: |
        ./repos/sytesbook-wpwedding-deploy/execute-installer.sh deploy-model-domain ${{ inputs.model-domain-name }} ${{ steps.generate_installer_id.outputs.generated_id }} ${{ vars.DEPLOYMENT_FOLDER }} ${{ inputs.model-domain-folder }}

    - name: Assign model domain
      env:
        OPERATOR_USERNAME: ${{ inputs.operator-username }}
        OPERATOR_PASSWORD: ${{ inputs.operator-application-password }}
      run: |
        node ./repos/sytesbook-wpwedding-deploy/assign-domain.js ${{ vars.MAIN_DOMAIN_NAME }} ${{ inputs.model-collection }} ${{ inputs.model-uid }} ${{ inputs.model-domain-name }}
